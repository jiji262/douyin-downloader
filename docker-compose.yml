version: '3.8'

services:
  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: douyin-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3
    networks:
      - douyin-network

  # 解析服务
  parsing-service:
    build:
      context: ./parsing_service
      dockerfile: Dockerfile
    container_name: douyin-parser
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENABLE_PLAYWRIGHT=true
      - ENABLE_SELENIUM=false
      - LOG_LEVEL=INFO
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./parsing_service:/app
      - ./xbogus_generator.py:/app/xbogus_generator.py:ro
    networks:
      - douyin-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: douyin-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - parsing-service
    networks:
      - douyin-network
    restart: unless-stopped

  # Prometheus监控（可选）
  prometheus:
    image: prom/prometheus:latest
    container_name: douyin-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - douyin-network
    restart: unless-stopped

  # Grafana可视化（可选）
  grafana:
    image: grafana/grafana:latest
    container_name: douyin-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - douyin-network
    restart: unless-stopped

networks:
  douyin-network:
    driver: bridge

volumes:
  redis-data:
  prometheus-data:
  grafana-data: